'''
code_review.txt

created: Oct 2021
by: Morgan Marino
description: "Document the following: List of faults detected, Description of each fault, Who was assigned to fix each fault, How the fault was fixed" -Project 4.pdf
'''
Code Review:
        Our group decided to write the code review from each of our own perspectives. We think this best shows our strengths as individuals and the number of methods Software Engineers use to identify and strategize to fix code errors.
        
Michael Talaga:
        After viewing the code in the snakegame.py file and witnessing how it performed, I thought there was an opportunity to add sound to the game. It doesnâ€™t have to include music but if it has sound effects it would add another dimension to the game as sound is very important for the gaming experience. Michael was assigned to resolve this and he consulted several websites to find good sounds to match the different things that happen in the snake game like eating and colliding/game ending. The sounds were properly cited and stored in their own files, and the game utilized pygame built-in mixer library to play the sounds.
        
Divya Shakamuri        
        The was a bug in my code and it was when the snake ate an apple, it would not properly align with the apple. This was inspection in Blackbox testing. This testing is most used type of black box testing in which the tester focuses on the core functionality, operations, and specifications of the software. Testers perform it by feeding input to the application for getting the desired output. It is usually performed before non-functional testing. Various types of functional testing are smoke, unit, integration, user acceptance testing, etc., and can be performed either in a manual or automated way. I was able to fix this bug by changing my code where I changed the position and screen dimensions so the snake could get to the apple.
