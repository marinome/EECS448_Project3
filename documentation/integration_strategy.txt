'''
integration_strategy.txt

created: Oct 2021
by: Morgan Marino
description: "Describe how your team integrated code from the team members. Which Integration Strategy do you think your team used?" -Project 4.pdf
'''
Integration Strategy:
        Originally, our group used All-at-Once integration. In Project 3, we all threw our ideas into code at random points, and although we had a Top-Down approach, it definitely was tested at several stages in which smaller and larger parts of code were being used at the same time. This project, however, we decided to be a bit more strategic about our integration process. When we conducted our Code Review, we noticed our biggest issues lied in corners of our code that we hadn't thoroughly tested. We divided up the work to things each of us would be comfortable with and began testing in a Sandwich Integration approach. A few of us started with small parts and created minute details we hadn't considered yet. This group worked bottom-up to efficiently add new features, fix stubs from Project 3, and ensure we had no holes in the movement of our snake. On the other hand, the rest of our team mates began working top-down to detect major flaws and make general corrections. This was especially helpful, because we were able to verify large chunks of code quickly.
	One deficit of Sandwich Integration is it is a little more difficult to identify the exact location of an error. However, we were sure to use lots of checkpoints, prints, test functions, and clear commenting to keep track of these. To continue with the sandwich metaphor, you could say we left ourselves a trail of breadcrumbs to determine what lines of code needed individual testing. At the time of writing this, we have another week to complete our code, so we have not yet reached the middle tier, but we are hoping this process will continue to go smoothly and we can end with an overall delicious and defect-free sandwich.